R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v = vector()
G_i = vector()
K <- vector()
K[1] <- mu * n
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != n) K[i+1] <- K[i] - y[i]
else K <- c(K, 0)
G_i <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N + 1)
if(i == 1) v[i] <- (N - 1) / N * (G_i - G)^2
else v[i] <- (N - 1) / N * (G_i - G)^2 + v[i - 1]
}
v[N]
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v = vector()
G_i = vector()
K <- vector()
K[1] <- mu * n
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != n) K[i+1] <- K[i] - y[i]
else K <- c(K, 0)
G_i <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N + 1)
if(i == 1) v[i] <- (N - 1) / N * (G_i[i] - G)^2
else v[i] <- (N - 1) / N * (G_i[i] - G)^2 + v[i - 1]
}
v[N]
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v = vector()
G_i = vector()
K <- vector()
K[1] <- mu * n
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != n) K[i+1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N + 1)
if(i == 1) v[i] <- (N - 1) / N * (G_i[i] - G)^2
else v[i] <- (N - 1) / N * (G_i[i] - G)^2 + v[i - 1]
}
v[N]
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v = vector()
G_i = vector()
K <- vector()
K[1] <- mu * n
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != n) K[i+1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N + 1)
if(i == 1) v[i] <- (N - 1) / N * (G_i[i] - G)^2
else v[i] <- (N - 1) / N * (G_i[i] - G)^2 + v[i - 1]
}
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v = vector()
G_i = vector()
K <- vector()
K[1] <- mu * n
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != n) K[i+1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N + 1)
if(i == 1) v[i] <- (N - 1) / N * (G_i[i] - G)^2
else v[i] <- (N - 1) / N * (G_i[i] - G)^2 + v[i - 1]
}
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v = vector()
G_i = vector()
K <- vector()
K[1] <- mu * n
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != n) K[i + 1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N + 1)
if(i == 1) v[i] <- (N - 1) / N * (G_i[i] - G)^2
else v[i] <- (N - 1) / N * (G_i[i] - G)^2 + v[i - 1]
}
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v = vector()
G_i = vector()
K <- vector()
K[1] <- mu * n
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != n) K[i + 1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N + 1)
if(i == 1) v[i] <- (N - 1) / N * (G_i[i] - G)^2
else v[i] <- (N - 1) / N * (G_i[i] - G)^2 + v[i - 1]
}
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v = vector()
G_i = vector()
K <- vector()
K[1] <- mu * N
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != n) K[i + 1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N + 1)
if(i == 1) v[i] <- (N - 1) / N * (G_i[i] - G)^2
else v[i] <- (N - 1) / N * (G_i[i] - G)^2 + v[i - 1]
}
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v = vector()
G_i = vector()
K <- vector()
K[1] <- mu * N
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != N) K[i + 1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N + 1)
if(i == 1) v[i] <- (N - 1) / N * (G_i[i] - G)^2
else v[i] <- (N - 1) / N * (G_i[i] - G)^2 + v[i - 1]
}
v[N]
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v = vector()
G_i = vector()
K <- vector()
K[1] <- mu * N
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != N) K[i + 1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N + 1)
if(i == 1) v[i] <- (N - 1) / N * (G_i[i] - G)^2
else v[i] <- (N - 1) / N * (G_i[i] - G)^2 + v[i - 1]
}
K
v[N]
G_hat <- function(x, n){
sum <- 0
for(i in 1:n){
for(j in 1:n){
sum <- sum + abs(x[i] - x[j])
}
}
sum / (2 * mean(x) * n * n)
}
v <- c(1.21889696917952, 0.0794705920852721, 0.239628585986793, 1.31094594481857,
0.946306612446215, 0.18770645884797, 0.0990762918207918, 0.899883037391019,
1.11378922029854, 1.14929740592362)
n <- length(v)
G <- G_hat(v, n)
G
G_i  <- function(x, n, i){
deleted <- x[-i]
sum <- 0
for(j in 1:(n-1)){
for(k in 1:(n-1)){
sum <- sum + abs(deleted[j] - deleted[k])
}
}
sum / (2 * mean(deleted) * (n-1)^2)
}
jack <- function(x, n){
sum <- 0
for(i in 1:n){
sum <- sum + (G_i(x, n, i) - G_hat(x, n))^2
}
sum * (n-1) / n
}
estimate <- jack(v, n)
estimate
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v = vector()
G_i = vector()
K <- vector()
K[1] <- mu * N
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != N) K[i + 1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N + 1)
if(i == 1) v[i] <- (N - 1) / N * (G_i[i] - G)^2
else v[i] <- (N - 1) / N * (G_i[i] - G)^2 + v[i - 1]
}
K
v[N]
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v = vector()
G_i = vector()
K <- vector()
K[1] <- mu * N
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != N) K[i + 1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N - 1)
if(i == 1) v[i] <- (N - 1) / N * (G_i[i] - G)^2
else v[i] <- (N - 1) / N * (G_i[i] - G)^2 + v[i - 1]
}
K
v[N]
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v = vector()
G_i = vector()
K <- vector()
K[1] <- mu * N
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != N) K[i + 1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N - 1)
if(i == 1) v[i] <- (N - 1) / N * (G_i[i] - G)^2
else v[i] <- (N - 1) / N * (G_i[i] - G)^2 + v[i - 1]
}
K
v[N]
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v = vector()
G_i = vector()
K <- vector()
K[1] <- mu * N
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != N) K[i + 1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N - 1)
if(i == 1) v[i] <- (N - 1) / N * (G_i[i] - G)^2
else v[i] <- (N - 1) / N * (G_i[i] - G)^2 + v[i - 1]
}
K
v[N]
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v = vector()
G_i = vector()
K <- vector()
K[1] <- mu * N
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != N) K[i + 1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N - 1)
if(i == 1) v[i] <- (N - 1) / N * (G_i[i] - G)^2
else v[i] <- (N - 1) / N * (G_i[i] - G)^2 + v[i - 1]
}
K
v[N]
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v = vector()
G_i = vector()
K <- vector()
K[1] <- mu * N
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != N) K[i + 1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N - 1)
if(i == 1) v[i] <- (N - 1) / N * (G_i[i] - G)^2
else v[i] <- (N - 1) / N * (G_i[i] - G)^2 + v[i - 1]
}
K
v[N]
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v = vector()
G_i = vector()
K <- vector()
K[1] <- mu * N
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != N) K[i + 1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N - 1)
if(i == 1) v[i] <- (N - 1) / N * (G_i[i] - G)^2
else v[i] <- (N - 1) / N * (G_i[i] - G)^2 + v[i - 1]
}
K
v[N]
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v = vector()
G_i = vector()
K <- vector()
K[1] <- mu * N
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != N) K[i + 1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N - 1)
if(i == 1) v[i] <- (N - 1) / N * (G_i[i] - G)^2
else v[i] <- (N - 1) / N * (G_i[i] - G)^2 + v[i - 1]
}
K
v[N]
G_hat <- function(x, n){
sum <- 0
for(i in 1:n){
for(j in 1:n){
sum <- sum + abs(x[i] - x[j])
}
}
sum / (2 * mean(x) * n * n)
}
v <- c(1.21889696917952, 0.0794705920852721, 0.239628585986793, 1.31094594481857,
0.946306612446215, 0.18770645884797, 0.0990762918207918, 0.899883037391019,
1.11378922029854, 1.14929740592362)
n <- length(v)
G <- G_hat(v, n)
G
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v_ = vector()
G_i = vector()
K <- vector()
K[1] <- mu * N
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != N) K[i + 1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N - 1)
if(i == 1) v_[i] <- (N - 1) / N * (G_i[i] - G)^2
else v_[i] <- (N - 1) / N * (G_i[i] - G)^2 + v_[i - 1]
}
K
v_[N]
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v_ = vector()
G_i = vector()
K <- vector()
K[1] <- mu * N
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != N) K[i + 1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N - 1)
if(i == 1) v_[i] <- (N - 1) / N * (G_i[i] - G)^2
else v_[i] <- (N - 1) / N * (G_i[i] - G)^2 + v_[i - 1]
}
v_[N]
load("sf_2019_compensation.rda")
ggplot(sf_2019_compensation, aes(x = Total.Salary)) + geom_density()
JK <- function(v) {
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v_ = vector()
G_i = vector()
K <- vector()
K[1] <- mu * N
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != N) K[i + 1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N - 1)
if(i == 1) v_[i] <- (N - 1) / N * (G_i[i] - G)^2
else v_[i] <- (N - 1) / N * (G_i[i] - G)^2 + v_[i - 1]
}
return(c(G, v_[N]))
}
stat <- function(x, index){
xstar <- x[index]
return(JK(xstar))
}
bootstrap <- boot(sf_2019_compensation$Total.Salary, statistic = stat, R = 1000)
boot.ci(bootstrap, type = "stud")
JK <- function(v) {
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v_ = vector()
G_i = vector()
K <- vector()
K[1] <- mu * N
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != N) K[i + 1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N - 1)
if(i == 1) v_[i] <- (N - 1) / N * (G_i[i] - G)^2
else v_[i] <- (N - 1) / N * (G_i[i] - G)^2 + v_[i - 1]
}
return(c(G, v_[N]))
}
stat <- function(x, index){
xstar <- x[index, ]
return(JK(xstar))
}
bootstrap <- boot(sf_2019_compensation$Total.Salary, statistic = stat, R = 1000)
JK <- function(v) {
y <- sort(v)
r <- 1:length(y)
N <- length(y)
mu <- mean(y)
R <- sum(r * y)
G <- 2 / (mu * N^2) * R - (N + 1) / N
v_ = vector()
G_i = vector()
K <- vector()
K[1] <- mu * N
for(i in 1:N) {
mu_i <- 1 / (N - 1) * (N * mu - y[i])
if(i != N) K[i + 1] <- K[i] - y[i]
else K <- c(K, 0)
G_i[i] <- 2 / (mu_i * (N - 1)^2) * (R - r[i] * y[i] - K[i+1]) - N / (N - 1)
if(i == 1) v_[i] <- (N - 1) / N * (G_i[i] - G)^2
else v_[i] <- (N - 1) / N * (G_i[i] - G)^2 + v_[i - 1]
}
return(c(G, v_[N]))
}
stat <- function(x, index){
x_ <- x[index]
return(JK(x_))
}
bootstrap <- boot(sf_2019_compensation$Total.Salary, statistic = stat, R = 1000)
boot.ci(bootstrap, type = "stud")
