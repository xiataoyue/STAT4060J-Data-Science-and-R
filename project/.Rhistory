y <- cancer[test.idx, ]
mean_loss(y, cut_off)
})
mean(losses)
err_lm <- replicate(k,{
rand.order <- sample.int(n)
train.idx <- rand.order[1:half]
test.idx <- rand.order[(half+1):n]
mod <- lm(radius_mean ~ benign, cancer[train.idx, ])
preds <- predict(mod, newdata = cancer[test.idx, ])
cancer$radius_mean[test.idx] - preds
})
mean(err_lm)
k <- 500
n <- dim(cancer)[1]
half = round(n/2)
mean_loss <- function(x, cut) {
classifications <- is_benign(x$radius_mean, cut)
## COMPUTE THE LOSS HERE
count <- length(x$radius_mean)
loss_point <- 0
for(i in 1:count){
if(x$benign[i] == TRUE && classifications[i] == FALSE) loss_point <- loss_point + 1
if(x$benign[i] == FALSE && classifications[i] == TRUE) loss_point <- loss_point + 3
}
return(loss_point / count)
}
losses <- replicate(k, {
rand.order <- sample.int(n)
train.idx <- rand.order[1:half]
test.idx <- rand.order[(half+1):n]
x <- cancer[train.idx, ]
cuts <- c()
for(i in 1:20){
cuts <- c(cuts, mean_loss(x, candidate_cutoffs[i]))
}
cut_off <- candidate_cutoffs[which.min(cuts)]
y <- cancer[test.idx, ]
mean_loss(y, cut_off)
})
mean(losses)
err_lm <- replicate(k,{
rand.order <- sample.int(n)
train.idx <- rand.order[1:half]
test.idx <- rand.order[(half+1):n]
mod <- lm(radius_mean ~ benign, cancer[train.idx, ])
preds <- predict(mod, newdata = cancer[test.idx, ])
cancer$radius_mean[test.idx] - preds
})
mean(err_lm)
k <- 500
n <- dim(cancer)[1]
half = round(n/2)
mean_loss <- function(x, cut) {
classifications <- is_benign(x$radius_mean, cut)
## COMPUTE THE LOSS HERE
count <- length(x$radius_mean)
loss_point <- 0
for(i in 1:count){
if(x$benign[i] == TRUE && classifications[i] == FALSE) loss_point <- loss_point + 1
if(x$benign[i] == FALSE && classifications[i] == TRUE) loss_point <- loss_point + 3
}
return(loss_point / count)
}
losses <- replicate(k, {
rand.order <- sample.int(n)
train.idx <- rand.order[1:half]
test.idx <- rand.order[(half+1):n]
x <- cancer[train.idx, ]
cuts <- c()
for(i in 1:20){
cuts <- c(cuts, mean_loss(x, candidate_cutoffs[i]))
}
cut_off <- candidate_cutoffs[which.min(cuts)]
y <- cancer[test.idx, ]
mean_loss(y, cut_off)
})
mean(losses)
err_lm <- replicate(k,{
rand.order <- sample.int(n)
train.idx <- rand.order[1:half]
test.idx <- rand.order[(half+1):n]
mod <- lm(radius_mean ~ benign, cancer[train.idx, ])
preds <- predict(mod, newdata = cancer[test.idx, ])
cancer$radius_mean[test.idx] - preds
})
mean(err_lm)
k <- 500
n <- dim(cancer)[1]
half = round(n/2)
mean_loss <- function(x, cut) {
classifications <- is_benign(x$radius_mean, cut)
## COMPUTE THE LOSS HERE
count <- length(x$radius_mean)
loss_point <- 0
for(i in 1:count){
if(x$benign[i] == TRUE && classifications[i] == FALSE) loss_point <- loss_point + 1
if(x$benign[i] == FALSE && classifications[i] == TRUE) loss_point <- loss_point + 3
}
return(loss_point / count)
}
losses <- replicate(k, {
rand.order <- sample.int(n)
train.idx <- rand.order[1:half]
test.idx <- rand.order[(half+1):n]
x <- cancer[train.idx, ]
cuts <- c()
for(i in 1:20){
cuts <- c(cuts, mean_loss(x, candidate_cutoffs[i]))
}
cut_off <- candidate_cutoffs[which.min(cuts)]
y <- cancer[test.idx, ]
mean_loss(y, cut_off)
})
mean(losses)
err_lm <- replicate(k,{
rand.order <- sample.int(n)
train.idx <- rand.order[1:half]
test.idx <- rand.order[(half+1):n]
mod <- lm(radius_mean ~ benign, cancer[train.idx, ])
preds <- predict(mod, newdata = cancer[test.idx, ])
cancer$radius_mean[test.idx] - preds
})
mean(err_lm)
k <- 500
n <- dim(cancer)[1]
half = round(n/2)
mean_loss <- function(x, cut) {
classifications <- is_benign(x$radius_mean, cut)
## COMPUTE THE LOSS HERE
count <- length(x$radius_mean)
loss_point <- 0
for(i in 1:count){
if(x$benign[i] == TRUE && classifications[i] == FALSE) loss_point <- loss_point + 1
if(x$benign[i] == FALSE && classifications[i] == TRUE) loss_point <- loss_point + 3
}
return(loss_point / count)
}
losses <- replicate(k, {
rand.order <- sample.int(n)
train.idx <- rand.order[1:half]
test.idx <- rand.order[(half+1):n]
x <- cancer[train.idx, ]
cuts <- c()
for(i in 1:20){
cuts <- c(cuts, mean_loss(x, candidate_cutoffs[i]))
}
cut_off <- candidate_cutoffs[which.min(cuts)]
y <- cancer[test.idx, ]
mean_loss(y, cut_off)
})
mean(losses)
err_lm <- replicate(k,{
rand.order <- sample.int(n)
train.idx <- rand.order[1:half]
test.idx <- rand.order[(half+1):n]
mod <- lm(radius_mean ~ benign, cancer[train.idx, ])
preds <- predict(mod, newdata = cancer[test.idx, ])
cancer$radius_mean[test.idx] - preds
})
mean(err_lm)
num <- c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
count <- 1
days <- 0
for(i in 4929:dim(shootings)[1]){
if(i == 4929){
days <- days + 1
next
}
if(shootings$date[i] == shootings$date[i-1]){
count <- count + 1
if(i == dim(shootings)[1]){
num[count + 1] <- num[count + 1] + 1
break
}
next
}
else {
num[count + 1] <- num[count + 1] + 1
days <- days + 1
if(i == dim(shootings)[1]){
num[2] <- num[2] + 1
break
}
count <- 1
next
}
}
num
setwd("C:/Users/James Xia/Desktop/STAT4060J/project")
library(tidyverse)
library(ggplot2)
shootings <- read.csv("fatal-police-shootings-data.csv")
col_base <- c("id",
"name",
"date",
"manner_of_death",
"armed",
"age",
"race",
"city",
"state",
"signs_of_mental_illness",
"threat_level",
"flee",
"body_camera",
"longitude",
"latitude",
"is_geocoding_exact"
)
#colnames(shootings) <- col_base
shootings$date
# g <- group_by(shootings, date)
ggplot(shootings, aes(x = date)) + geom_histogram(stat = "count", col = "blue")
dim(shootings)[1]
num <- c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
count <- 1
days <- 0
for(i in 4929:dim(shootings)[1]){
if(i == 4929){
days <- days + 1
next
}
if(shootings$date[i] == shootings$date[i-1]){
count <- count + 1
if(i == dim(shootings)[1]){
num[count + 1] <- num[count + 1] + 1
break
}
next
}
else {
num[count + 1] <- num[count + 1] + 1
days <- days + 1
if(i == dim(shootings)[1]){
num[2] <- num[2] + 1
break
}
count <- 1
next
}
}
num
days
num[1] <- 366 + 191 - days
num[1]
x <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
y <- num
data <- c()
for(i in 1:11) {
data <- c(data, rep(i - 1, num[i]))
}
data
hist(data, right = FALSE, xlab = "shooting numbers", ylab = "number of days", xlim = c(0, 10), ylim = c(0, 600), col = "yellow")
hist(data, right = FALSE, xlab = "shooting numbers", ylab = "number of days", xlim = c(0, 10), ylim = c(0, 200), col = "yellow")
knitr::opts_chunk$set(echo = TRUE)
set.seed(288942)
library(tidyverse)
library(tidyverse)
library(ggplot2)
shootings <- read.csv("fatal-police-shootings-data.csv")
col_base <- c("id",
"name",
"date",
"manner_of_death",
"armed",
"age",
"race",
"city",
"state",
"signs_of_mental_illness",
"threat_level",
"flee",
"body_camera",
"longitude",
"latitude",
"is_geocoding_exact"
)
#colnames(shootings) <- col_base
#shootings$date
# g <- group_by(shootings, date)
ggplot(shootings, aes(x = date)) + geom_histogram(stat = "count", col = "blue")
num <- c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
count <- 1
days <- 0
for(i in 1:4928){
if(i == 1){
days <- days + 1
next
}
if(shootings$date[i] == shootings$date[i-1]){
count <- count + 1
if(i == 4928){
num[count + 1] <- num[count + 1] + 1
break
}
next
}
else {
num[count + 1] <- num[count + 1] + 1
days <- days + 1
if(i == 4928){
num[2] <- num[2] + 1
break
}
count <- 1
next
}
}
num
days
num[1] <- 365 * 4 + 366 - days
num[1]
x <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
y <- num
data <- c()
for(i in 1:11) {
data <- c(data, rep(i - 1, num[i]))
}
data
hist(data, right = FALSE, xlab = "shooting numbers", ylab = "number of days", xlim = c(0, 10), ylim = c(0, 500), col = "yellow")
lines(density(data))
library(tidyverse)
library(ggplot2)
shootings <- read.csv("fatal-police-shootings-data.csv")
col_base <- c("id",
"name",
"date",
"manner_of_death",
"armed",
"age",
"race",
"city",
"state",
"signs_of_mental_illness",
"threat_level",
"flee",
"body_camera",
"longitude",
"latitude",
"is_geocoding_exact"
)
#colnames(shootings) <- col_base
#shootings$date
# g <- group_by(shootings, date)
ggplot(shootings, aes(x = date)) + geom_histogram(stat = "count", col = "blue")
num <- c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
count <- 1
days <- 0
for(i in 1:5949){
if(i == 1){
days <- days + 1
next
}
if(shootings$date[i] == shootings$date[i-1]){
count <- count + 1
if(i == 5949){
num[count + 1] <- num[count + 1] + 1
break
}
next
}
else {
num[count + 1] <- num[count + 1] + 1
days <- days + 1
if(i == 5949){
num[2] <- num[2] + 1
break
}
count <- 1
next
}
}
num
days
num[1] <- 365 * 4 + 366*2 - days
num[1]
x <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
y <- num
data <- c()
for(i in 1:11) {
data <- c(data, rep(i - 1, num[i]))
}
hist(data, right = FALSE, xlab = "shooting numbers", ylab = "number of days", xlim = c(0, 10), ylim = c(0, 500), col = "yellow")
lines(density(data))
library(tidyverse)
library(ggplot2)
shootings <- read.csv("fatal-police-shootings-data.csv")
col_base <- c("id",
"name",
"date",
"manner_of_death",
"armed",
"age",
"race",
"city",
"state",
"signs_of_mental_illness",
"threat_level",
"flee",
"body_camera",
"longitude",
"latitude",
"is_geocoding_exact"
)
#colnames(shootings) <- col_base
#shootings$date
# g <- group_by(shootings, date)
ggplot(shootings, aes(x = date)) + geom_histogram(stat = "count", col = "grey")
num <- c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
count <- 1
days <- 0
for(i in 1:5949){
if(i == 1){
days <- days + 1
next
}
if(shootings$date[i] == shootings$date[i-1]){
count <- count + 1
if(i == 5949){
num[count + 1] <- num[count + 1] + 1
break
}
next
}
else {
num[count + 1] <- num[count + 1] + 1
days <- days + 1
if(i == 5949){
num[2] <- num[2] + 1
break
}
count <- 1
next
}
}
num[1] <- 365 * 4 + 366*2 - days
x <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
y <- num
data <- c()
for(i in 1:11) {
data <- c(data, rep(i - 1, num[i]))
}
hist(data, right = FALSE, xlab = "shooting numbers", ylab = "number of days", xlim = c(0, 10), ylim = c(0, 550), col = "yellow")
# lines(density(data))
library(tidyverse)
library(ggplot2)
shootings <- read.csv("fatal-police-shootings-data.csv")
col_base <- c("id",
"name",
"date",
"manner_of_death",
"armed",
"age",
"race",
"city",
"state",
"signs_of_mental_illness",
"threat_level",
"flee",
"body_camera",
"longitude",
"latitude",
"is_geocoding_exact"
)
#colnames(shootings) <- col_base
#shootings$date
# g <- group_by(shootings, date)
ggplot(shootings, aes(x = date)) + geom_histogram(stat = "count", col = "grey")
num <- c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
count <- 1
days <- 0
for(i in 1:5949){
if(i == 1){
days <- days + 1
next
}
if(shootings$date[i] == shootings$date[i-1]){
count <- count + 1
if(i == 5949){
num[count + 1] <- num[count + 1] + 1
break
}
next
}
else {
num[count + 1] <- num[count + 1] + 1
days <- days + 1
if(i == 5949){
num[2] <- num[2] + 1
break
}
count <- 1
next
}
}
num[1] <- 365 * 4 + 366*2 - days
x <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
y <- num
data <- c()
for(i in 1:11) {
data <- c(data, rep(i - 1, num[i]))
}
hist(data, right = FALSE, xlab = "shooting numbers", ylab = "number of days", xlim = c(0, 10), ylim = c(0, 600), col = "yellow")
# lines(density(data))
index <- 0
for(i in 1:dim(shootings)[1]){
if(shootings$date[i] == "2021/1/1") break
index <- index + 1
}
index
dim(shootings)[1]
